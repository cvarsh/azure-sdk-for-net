// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBox.Models
{
    public partial class ReverseShippingDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ContactDetails))
            {
                writer.WritePropertyName("contactDetails");
                writer.WriteObjectValue(ContactDetails);
            }
            if (Optional.IsDefined(ShippingAddress))
            {
                writer.WritePropertyName("shippingAddress");
                writer.WriteObjectValue(ShippingAddress);
            }
            writer.WriteEndObject();
        }

        internal static ReverseShippingDetails DeserializeReverseShippingDetails(JsonElement element)
        {
            Optional<ContactInfo> contactDetails = default;
            Optional<DataBoxShippingAddress> shippingAddress = default;
            Optional<bool> isUpdated = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("contactDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    contactDetails = ContactInfo.DeserializeContactInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("shippingAddress"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    shippingAddress = DataBoxShippingAddress.DeserializeDataBoxShippingAddress(property.Value);
                    continue;
                }
                if (property.NameEquals("isUpdated"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isUpdated = property.Value.GetBoolean();
                    continue;
                }
            }
            return new ReverseShippingDetails(contactDetails.Value, shippingAddress.Value, Optional.ToNullable(isUpdated));
        }
    }
}
