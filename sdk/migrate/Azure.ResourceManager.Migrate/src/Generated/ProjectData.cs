// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Migrate.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Migrate
{
    /// <summary> A class representing the Project data model. </summary>
    public partial class ProjectData : ResourceData
    {
        /// <summary> Initializes a new instance of ProjectData. </summary>
        public ProjectData()
        {
        }

        /// <summary> Initializes a new instance of ProjectData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="eTag"> For optimistic concurrency control. </param>
        /// <param name="location"> Azure location in which project is created. </param>
        /// <param name="tags"> Tags provided by Azure Tagging service. </param>
        /// <param name="properties"> Properties of the project. </param>
        internal ProjectData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, ETag? eTag, Core.AzureLocation? location, BinaryData tags, ProjectProperties properties) : base(id, name, resourceType, systemData)
        {
            ETag = eTag;
            Location = location;
            Tags = tags;
            Properties = properties;
        }

        /// <summary> For optimistic concurrency control. </summary>
        public ETag? ETag { get; set; }
        /// <summary> Azure location in which project is created. </summary>
        public Core.AzureLocation? Location { get; set; }
        /// <summary>
        /// Tags provided by Azure Tagging service.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Tags { get; set; }
        /// <summary> Properties of the project. </summary>
        public ProjectProperties Properties { get; set; }
    }
}
