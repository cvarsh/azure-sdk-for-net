// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    public partial class AuthCredential : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name.Value.ToString());
            }
            if (Optional.IsDefined(UsernameSecretIdentifier))
            {
                writer.WritePropertyName("usernameSecretIdentifier");
                writer.WriteStringValue(UsernameSecretIdentifier);
            }
            if (Optional.IsDefined(PasswordSecretIdentifier))
            {
                writer.WritePropertyName("passwordSecretIdentifier");
                writer.WriteStringValue(PasswordSecretIdentifier);
            }
            writer.WriteEndObject();
        }

        internal static AuthCredential DeserializeAuthCredential(JsonElement element)
        {
            Optional<CredentialName> name = default;
            Optional<string> usernameSecretIdentifier = default;
            Optional<string> passwordSecretIdentifier = default;
            Optional<CredentialHealth> credentialHealth = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    name = new CredentialName(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("usernameSecretIdentifier"))
                {
                    usernameSecretIdentifier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("passwordSecretIdentifier"))
                {
                    passwordSecretIdentifier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("credentialHealth"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    credentialHealth = CredentialHealth.DeserializeCredentialHealth(property.Value);
                    continue;
                }
            }
            return new AuthCredential(Optional.ToNullable(name), usernameSecretIdentifier.Value, passwordSecretIdentifier.Value, credentialHealth.Value);
        }
    }
}
