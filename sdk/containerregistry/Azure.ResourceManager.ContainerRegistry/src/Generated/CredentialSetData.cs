// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ContainerRegistry.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ContainerRegistry
{
    /// <summary> A class representing the CredentialSet data model. </summary>
    public partial class CredentialSetData : ResourceData
    {
        /// <summary> Initializes a new instance of CredentialSetData. </summary>
        public CredentialSetData()
        {
            AuthCredentials = new ChangeTrackingList<AuthCredential>();
        }

        /// <summary> Initializes a new instance of CredentialSetData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="identity"> Identities associated with the resource. This is used to access the KeyVault secrets. </param>
        /// <param name="loginServer"> The credentials are stored for this upstream or login server. </param>
        /// <param name="authCredentials">
        /// List of authentication credentials stored for an upstream.
        /// Usually consists of a primary and an optional secondary credential.
        /// </param>
        /// <param name="createdOn"> The creation date of credential store resource. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        internal CredentialSetData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, ManagedServiceIdentity identity, string loginServer, IList<AuthCredential> authCredentials, DateTimeOffset? createdOn, ContainerRegistryProvisioningState? provisioningState) : base(id, name, resourceType, systemData)
        {
            Identity = identity;
            LoginServer = loginServer;
            AuthCredentials = authCredentials;
            CreatedOn = createdOn;
            ProvisioningState = provisioningState;
        }

        /// <summary> Identities associated with the resource. This is used to access the KeyVault secrets. </summary>
        public ManagedServiceIdentity Identity { get; set; }
        /// <summary> The credentials are stored for this upstream or login server. </summary>
        public string LoginServer { get; set; }
        /// <summary>
        /// List of authentication credentials stored for an upstream.
        /// Usually consists of a primary and an optional secondary credential.
        /// </summary>
        public IList<AuthCredential> AuthCredentials { get; }
        /// <summary> The creation date of credential store resource. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> Provisioning state of the resource. </summary>
        public ContainerRegistryProvisioningState? ProvisioningState { get; }
    }
}
