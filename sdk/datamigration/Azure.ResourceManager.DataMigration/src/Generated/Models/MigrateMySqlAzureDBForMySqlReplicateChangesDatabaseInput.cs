// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Database specific information for MySQL to Azure Database for MySQL migration task inputs. </summary>
    public partial class MigrateMySqlAzureDBForMySqlReplicateChangesDatabaseInput
    {
        /// <summary> Initializes a new instance of MigrateMySqlAzureDBForMySqlReplicateChangesDatabaseInput. </summary>
        /// <param name="name"> Name of the database. </param>
        /// <param name="targetDatabaseName"> Name of the target database. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="targetDatabaseName"/> is null. </exception>
        public MigrateMySqlAzureDBForMySqlReplicateChangesDatabaseInput(string name, string targetDatabaseName)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(targetDatabaseName, nameof(targetDatabaseName));

            Name = name;
            TargetDatabaseName = targetDatabaseName;
            TableMap = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of MigrateMySqlAzureDBForMySqlReplicateChangesDatabaseInput. </summary>
        /// <param name="name"> Name of the database. </param>
        /// <param name="targetDatabaseName"> Name of the target database. </param>
        /// <param name="tableMap"> Mapping of source to target tables. </param>
        internal MigrateMySqlAzureDBForMySqlReplicateChangesDatabaseInput(string name, string targetDatabaseName, IDictionary<string, string> tableMap)
        {
            Name = name;
            TargetDatabaseName = targetDatabaseName;
            TableMap = tableMap;
        }

        /// <summary> Name of the database. </summary>
        public string Name { get; set; }
        /// <summary> Name of the target database. </summary>
        public string TargetDatabaseName { get; set; }
        /// <summary> Mapping of source to target tables. </summary>
        public IDictionary<string, string> TableMap { get; }
    }
}
