// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> The MigrateMySqlAzureDBForMySqlOfflineTaskOutputMigrationLevel. </summary>
    public partial class MigrateMySqlAzureDBForMySqlOfflineTaskOutputMigrationLevel : MigrateMySqlAzureDBForMySqlOfflineTaskOutput
    {
        /// <summary> Initializes a new instance of MigrateMySqlAzureDBForMySqlOfflineTaskOutputMigrationLevel. </summary>
        internal MigrateMySqlAzureDBForMySqlOfflineTaskOutputMigrationLevel()
        {
            ExceptionsAndWarnings = new ChangeTrackingList<ReportableException>();
            ResultType = "MigrationLevelOutput";
        }

        /// <summary> Initializes a new instance of MigrateMySqlAzureDBForMySqlOfflineTaskOutputMigrationLevel. </summary>
        /// <param name="id"> Result identifier. </param>
        /// <param name="resultType"> Result type. </param>
        /// <param name="migrationType"></param>
        /// <param name="startedOn"> Migration start time. </param>
        /// <param name="endedOn"> Migration end time. </param>
        /// <param name="durationInSeconds"> Duration of task execution in seconds. </param>
        /// <param name="status"> Current status of migration. </param>
        /// <param name="statusMessage"> Migration status message. </param>
        /// <param name="message"> Migration progress message. </param>
        /// <param name="databases"> Selected databases as a map from database name to database id. </param>
        /// <param name="databaseSummary"> Summary of database results in the migration. </param>
        /// <param name="migrationReportResult"> Migration Report Result, provides unique url for downloading your migration report. </param>
        /// <param name="sourceServerVersion"> Source server version. </param>
        /// <param name="sourceServerBrandVersion"> Source server brand version. </param>
        /// <param name="targetServerVersion"> Target server version. </param>
        /// <param name="targetServerBrandVersion"> Target server brand version. </param>
        /// <param name="exceptionsAndWarnings"> Migration exceptions and warnings. </param>
        /// <param name="lastStorageUpdate"> Last time the storage was updated. </param>
        /// <param name="sourceBinlogPosition"> The binlog position when the consistent snapshot was taken. Only returned when consistent backup is enabled in the migration inputs. </param>
        internal MigrateMySqlAzureDBForMySqlOfflineTaskOutputMigrationLevel(string id, string resultType, MigrateMySqlAzureDBForMySqlOfflineTaskOutputMigrationLevelMigrationType? migrationType, DateTimeOffset? startedOn, DateTimeOffset? endedOn, long? durationInSeconds, MigrationStatus? status, string statusMessage, string message, string databases, string databaseSummary, MigrationReportResult migrationReportResult, string sourceServerVersion, string sourceServerBrandVersion, string targetServerVersion, string targetServerBrandVersion, IReadOnlyList<ReportableException> exceptionsAndWarnings, DateTimeOffset? lastStorageUpdate, MySqlBinlogPositionOutput sourceBinlogPosition) : base(id, resultType)
        {
            MigrationType = migrationType;
            StartedOn = startedOn;
            EndedOn = endedOn;
            DurationInSeconds = durationInSeconds;
            Status = status;
            StatusMessage = statusMessage;
            Message = message;
            Databases = databases;
            DatabaseSummary = databaseSummary;
            MigrationReportResult = migrationReportResult;
            SourceServerVersion = sourceServerVersion;
            SourceServerBrandVersion = sourceServerBrandVersion;
            TargetServerVersion = targetServerVersion;
            TargetServerBrandVersion = targetServerBrandVersion;
            ExceptionsAndWarnings = exceptionsAndWarnings;
            LastStorageUpdate = lastStorageUpdate;
            SourceBinlogPosition = sourceBinlogPosition;
            ResultType = resultType ?? "MigrationLevelOutput";
        }

        /// <summary> Gets the migration type. </summary>
        public MigrateMySqlAzureDBForMySqlOfflineTaskOutputMigrationLevelMigrationType? MigrationType { get; }
        /// <summary> Migration start time. </summary>
        public DateTimeOffset? StartedOn { get; }
        /// <summary> Migration end time. </summary>
        public DateTimeOffset? EndedOn { get; }
        /// <summary> Duration of task execution in seconds. </summary>
        public long? DurationInSeconds { get; }
        /// <summary> Current status of migration. </summary>
        public MigrationStatus? Status { get; }
        /// <summary> Migration status message. </summary>
        public string StatusMessage { get; }
        /// <summary> Migration progress message. </summary>
        public string Message { get; }
        /// <summary> Selected databases as a map from database name to database id. </summary>
        public string Databases { get; }
        /// <summary> Summary of database results in the migration. </summary>
        public string DatabaseSummary { get; }
        /// <summary> Migration Report Result, provides unique url for downloading your migration report. </summary>
        public MigrationReportResult MigrationReportResult { get; }
        /// <summary> Source server version. </summary>
        public string SourceServerVersion { get; }
        /// <summary> Source server brand version. </summary>
        public string SourceServerBrandVersion { get; }
        /// <summary> Target server version. </summary>
        public string TargetServerVersion { get; }
        /// <summary> Target server brand version. </summary>
        public string TargetServerBrandVersion { get; }
        /// <summary> Migration exceptions and warnings. </summary>
        public IReadOnlyList<ReportableException> ExceptionsAndWarnings { get; }
        /// <summary> Last time the storage was updated. </summary>
        public DateTimeOffset? LastStorageUpdate { get; }
        /// <summary> The binlog position when the consistent snapshot was taken. Only returned when consistent backup is enabled in the migration inputs. </summary>
        public MySqlBinlogPositionOutput SourceBinlogPosition { get; }
    }
}
