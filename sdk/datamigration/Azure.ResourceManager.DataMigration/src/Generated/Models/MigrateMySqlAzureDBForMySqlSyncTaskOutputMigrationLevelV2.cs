// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> The MigrateMySqlAzureDBForMySqlSyncTaskOutputMigrationLevelV2. </summary>
    public partial class MigrateMySqlAzureDBForMySqlSyncTaskOutputMigrationLevelV2 : MigrateMySqlAzureDBForMySqlSyncTaskOutput
    {
        /// <summary> Initializes a new instance of MigrateMySqlAzureDBForMySqlSyncTaskOutputMigrationLevelV2. </summary>
        internal MigrateMySqlAzureDBForMySqlSyncTaskOutputMigrationLevelV2()
        {
            ResultType = "MigrationLevelOutput";
        }

        /// <summary> Initializes a new instance of MigrateMySqlAzureDBForMySqlSyncTaskOutputMigrationLevelV2. </summary>
        /// <param name="id"> Result identifier. </param>
        /// <param name="resultType"> Result type. </param>
        /// <param name="migrationType"></param>
        /// <param name="startedOn"> Migration start time. </param>
        /// <param name="endedOn"> Migration end time. </param>
        /// <param name="status"> Current status of migration. </param>
        /// <param name="sourceServerVersion"> Source server version. </param>
        /// <param name="targetServerVersion"> Target server version. </param>
        /// <param name="lastStorageUpdate"> Last time the migration status storage was updated. </param>
        /// <param name="migrationId"> Migration Identifier. </param>
        /// <param name="hasServerLevelError"> Indicates that the migration has server level error. </param>
        /// <param name="retryingSummary"> Retrying summary. </param>
        /// <param name="totalRetryingTime"> Total amount of time during the migration where operations were impacted by transient errors. </param>
        /// <param name="totalSourceRetryCount"> Total number of retries that have occurred due to transient errors raised by the source server. </param>
        /// <param name="totalTargetRetryCount"> Total number of retries that have occurred due to transient errors raised by the target server. </param>
        /// <param name="totalOtherRetryCount"> Total number of retries that have occurred due to transient errors raised by the unknown source. </param>
        /// <param name="continuousDataMovementProgress"> Migration progress. </param>
        internal MigrateMySqlAzureDBForMySqlSyncTaskOutputMigrationLevelV2(string id, string resultType, MigrateMySqlAzureDBForMySqlReplicateChangesTaskOutputMigrationLevelMigrationType? migrationType, DateTimeOffset? startedOn, DateTimeOffset? endedOn, MigrationStatus? status, string sourceServerVersion, string targetServerVersion, DateTimeOffset? lastStorageUpdate, string migrationId, bool? hasServerLevelError, BinaryData retryingSummary, string totalRetryingTime, int? totalSourceRetryCount, int? totalTargetRetryCount, int? totalOtherRetryCount, MySqlContinuousDataMovementProgress continuousDataMovementProgress) : base(id, resultType)
        {
            MigrationType = migrationType;
            StartedOn = startedOn;
            EndedOn = endedOn;
            Status = status;
            SourceServerVersion = sourceServerVersion;
            TargetServerVersion = targetServerVersion;
            LastStorageUpdate = lastStorageUpdate;
            MigrationId = migrationId;
            HasServerLevelError = hasServerLevelError;
            RetryingSummary = retryingSummary;
            TotalRetryingTime = totalRetryingTime;
            TotalSourceRetryCount = totalSourceRetryCount;
            TotalTargetRetryCount = totalTargetRetryCount;
            TotalOtherRetryCount = totalOtherRetryCount;
            ContinuousDataMovementProgress = continuousDataMovementProgress;
            ResultType = resultType ?? "MigrationLevelOutput";
        }

        /// <summary> Gets the migration type. </summary>
        public MigrateMySqlAzureDBForMySqlReplicateChangesTaskOutputMigrationLevelMigrationType? MigrationType { get; }
        /// <summary> Migration start time. </summary>
        public DateTimeOffset? StartedOn { get; }
        /// <summary> Migration end time. </summary>
        public DateTimeOffset? EndedOn { get; }
        /// <summary> Current status of migration. </summary>
        public MigrationStatus? Status { get; }
        /// <summary> Source server version. </summary>
        public string SourceServerVersion { get; }
        /// <summary> Target server version. </summary>
        public string TargetServerVersion { get; }
        /// <summary> Last time the migration status storage was updated. </summary>
        public DateTimeOffset? LastStorageUpdate { get; }
        /// <summary> Migration Identifier. </summary>
        public string MigrationId { get; }
        /// <summary> Indicates that the migration has server level error. </summary>
        public bool? HasServerLevelError { get; }
        /// <summary>
        /// Retrying summary
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData RetryingSummary { get; }
        /// <summary> Total amount of time during the migration where operations were impacted by transient errors. </summary>
        public string TotalRetryingTime { get; }
        /// <summary> Total number of retries that have occurred due to transient errors raised by the source server. </summary>
        public int? TotalSourceRetryCount { get; }
        /// <summary> Total number of retries that have occurred due to transient errors raised by the target server. </summary>
        public int? TotalTargetRetryCount { get; }
        /// <summary> Total number of retries that have occurred due to transient errors raised by the unknown source. </summary>
        public int? TotalOtherRetryCount { get; }
        /// <summary> Migration progress. </summary>
        public MySqlContinuousDataMovementProgress ContinuousDataMovementProgress { get; }
    }
}
