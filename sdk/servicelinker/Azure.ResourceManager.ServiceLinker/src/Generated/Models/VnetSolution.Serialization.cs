// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceLinker.Models
{
    public partial class VnetSolution : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SolutionType))
            {
                if (SolutionType != null)
                {
                    writer.WritePropertyName("type");
                    writer.WriteStringValue(SolutionType.Value.ToString());
                }
                else
                {
                    writer.WriteNull("type");
                }
            }
            if (Optional.IsDefined(DeleteOrUpdateBehavior))
            {
                writer.WritePropertyName("deleteOrUpdateBehavior");
                writer.WriteStringValue(DeleteOrUpdateBehavior.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static VnetSolution DeserializeVnetSolution(JsonElement element)
        {
            Optional<VnetSolutionType?> type = default;
            Optional<DeleteOrUpdateBehavior> deleteOrUpdateBehavior = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("type"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        type = null;
                        continue;
                    }
                    type = new VnetSolutionType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("deleteOrUpdateBehavior"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    deleteOrUpdateBehavior = new DeleteOrUpdateBehavior(property.Value.GetString());
                    continue;
                }
            }
            return new VnetSolution(Optional.ToNullable(type), Optional.ToNullable(deleteOrUpdateBehavior));
        }
    }
}
