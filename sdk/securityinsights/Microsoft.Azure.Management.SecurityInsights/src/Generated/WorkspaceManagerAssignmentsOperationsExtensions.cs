// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for WorkspaceManagerAssignmentsOperations.
    /// </summary>
    public static partial class WorkspaceManagerAssignmentsOperationsExtensions
    {
            /// <summary>
            /// Get all workspace manager assignments for the Sentinel workspace manager.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='orderby'>
            /// Sorts the results. Optional.
            /// </param>
            /// <param name='top'>
            /// Returns only the first n results. Optional.
            /// </param>
            /// <param name='skipToken'>
            /// Skiptoken is only used if a previous operation returned a partial result.
            /// If a previous response contains a nextLink element, the value of the
            /// nextLink element will include a skiptoken parameter that specifies a
            /// starting point to use for subsequent calls. Optional.
            /// </param>
            public static IPage<WorkspaceManagerAssignment> List(this IWorkspaceManagerAssignmentsOperations operations, string resourceGroupName, string workspaceName, string orderby = default(string), int? top = default(int?), string skipToken = default(string))
            {
                return operations.ListAsync(resourceGroupName, workspaceName, orderby, top, skipToken).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get all workspace manager assignments for the Sentinel workspace manager.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='orderby'>
            /// Sorts the results. Optional.
            /// </param>
            /// <param name='top'>
            /// Returns only the first n results. Optional.
            /// </param>
            /// <param name='skipToken'>
            /// Skiptoken is only used if a previous operation returned a partial result.
            /// If a previous response contains a nextLink element, the value of the
            /// nextLink element will include a skiptoken parameter that specifies a
            /// starting point to use for subsequent calls. Optional.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<WorkspaceManagerAssignment>> ListAsync(this IWorkspaceManagerAssignmentsOperations operations, string resourceGroupName, string workspaceName, string orderby = default(string), int? top = default(int?), string skipToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, workspaceName, orderby, top, skipToken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a workspace manager assignment
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='workspaceManagerAssignmentName'>
            /// The name of the workspace manager assignment
            /// </param>
            public static WorkspaceManagerAssignment Get(this IWorkspaceManagerAssignmentsOperations operations, string resourceGroupName, string workspaceName, string workspaceManagerAssignmentName)
            {
                return operations.GetAsync(resourceGroupName, workspaceName, workspaceManagerAssignmentName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a workspace manager assignment
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='workspaceManagerAssignmentName'>
            /// The name of the workspace manager assignment
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<WorkspaceManagerAssignment> GetAsync(this IWorkspaceManagerAssignmentsOperations operations, string resourceGroupName, string workspaceName, string workspaceManagerAssignmentName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, workspaceManagerAssignmentName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a workspace manager assignment.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='workspaceManagerAssignmentName'>
            /// The name of the workspace manager assignment
            /// </param>
            /// <param name='targetResourceName'>
            /// The name of the workspace manager group targeted by the workspace manager
            /// assignment
            /// </param>
            /// <param name='items'>
            /// List of resources included in this workspace manager assignment
            /// </param>
            public static WorkspaceManagerAssignment CreateOrUpdate(this IWorkspaceManagerAssignmentsOperations operations, string resourceGroupName, string workspaceName, string workspaceManagerAssignmentName, string targetResourceName, IList<AssignmentItem> items)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, workspaceName, workspaceManagerAssignmentName, targetResourceName, items).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a workspace manager assignment.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='workspaceManagerAssignmentName'>
            /// The name of the workspace manager assignment
            /// </param>
            /// <param name='targetResourceName'>
            /// The name of the workspace manager group targeted by the workspace manager
            /// assignment
            /// </param>
            /// <param name='items'>
            /// List of resources included in this workspace manager assignment
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<WorkspaceManagerAssignment> CreateOrUpdateAsync(this IWorkspaceManagerAssignmentsOperations operations, string resourceGroupName, string workspaceName, string workspaceManagerAssignmentName, string targetResourceName, IList<AssignmentItem> items, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, workspaceManagerAssignmentName, targetResourceName, items, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a workspace manager assignment
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='workspaceManagerAssignmentName'>
            /// The name of the workspace manager assignment
            /// </param>
            public static void Delete(this IWorkspaceManagerAssignmentsOperations operations, string resourceGroupName, string workspaceName, string workspaceManagerAssignmentName)
            {
                operations.DeleteAsync(resourceGroupName, workspaceName, workspaceManagerAssignmentName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a workspace manager assignment
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='workspaceManagerAssignmentName'>
            /// The name of the workspace manager assignment
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IWorkspaceManagerAssignmentsOperations operations, string resourceGroupName, string workspaceName, string workspaceManagerAssignmentName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, workspaceManagerAssignmentName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Get all workspace manager assignments for the Sentinel workspace manager.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<WorkspaceManagerAssignment> ListNext(this IWorkspaceManagerAssignmentsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get all workspace manager assignments for the Sentinel workspace manager.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<WorkspaceManagerAssignment>> ListNextAsync(this IWorkspaceManagerAssignmentsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
