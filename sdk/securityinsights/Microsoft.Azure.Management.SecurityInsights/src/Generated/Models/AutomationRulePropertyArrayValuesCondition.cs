// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class AutomationRulePropertyArrayValuesCondition
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AutomationRulePropertyArrayValuesCondition class.
        /// </summary>
        public AutomationRulePropertyArrayValuesCondition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AutomationRulePropertyArrayValuesCondition class.
        /// </summary>
        /// <param name="arrayType">Possible values include: 'CustomDetails',
        /// 'CustomDetailValues'</param>
        /// <param name="arrayConditionType">Possible values include:
        /// 'AnyItem'</param>
        public AutomationRulePropertyArrayValuesCondition(string arrayType = default(string), string arrayConditionType = default(string), IList<AutomationRuleCondition> itemConditions = default(IList<AutomationRuleCondition>))
        {
            ArrayType = arrayType;
            ArrayConditionType = arrayConditionType;
            ItemConditions = itemConditions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'CustomDetails',
        /// 'CustomDetailValues'
        /// </summary>
        [JsonProperty(PropertyName = "arrayType")]
        public string ArrayType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'AnyItem'
        /// </summary>
        [JsonProperty(PropertyName = "arrayConditionType")]
        public string ArrayConditionType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "itemConditions")]
        public IList<AutomationRuleCondition> ItemConditions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ItemConditions != null)
            {
                if (ItemConditions.Count > 10)
                {
                    throw new ValidationException(ValidationRules.MaxItems, "ItemConditions", 10);
                }
            }
        }
    }
}
