// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents Anomaly Security ML Analytics Settings
    /// </summary>
    [Newtonsoft.Json.JsonObject("Anomaly")]
    [Rest.Serialization.JsonTransformation]
    public partial class AnomalySecurityMLAnalyticsSettings : SecurityMLAnalyticsSetting
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AnomalySecurityMLAnalyticsSettings class.
        /// </summary>
        public AnomalySecurityMLAnalyticsSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AnomalySecurityMLAnalyticsSettings class.
        /// </summary>
        /// <param name="displayName">The display name for settings created by
        /// this SecurityMLAnalyticsSettings.</param>
        /// <param name="enabled">Determines whether this settings is enabled
        /// or disabled.</param>
        /// <param name="anomalyVersion">The anomaly version of the
        /// AnomalySecurityMLAnalyticsSettings.</param>
        /// <param name="frequency">The frequency that this
        /// SecurityMLAnalyticsSettings will be run.</param>
        /// <param name="settingsStatus">The anomaly
        /// SecurityMLAnalyticsSettings status. Possible values include:
        /// 'Production', 'Flighting'</param>
        /// <param name="isDefaultSettings">Determines whether this anomaly
        /// security ml analytics settings is a default settings</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="etag">Etag of the azure resource</param>
        /// <param name="description">The description of the
        /// SecurityMLAnalyticsSettings.</param>
        /// <param name="lastModifiedUtc">The last time that this
        /// SecurityMLAnalyticsSettings has been modified.</param>
        /// <param name="requiredDataConnectors">The required data sources for
        /// this SecurityMLAnalyticsSettings</param>
        /// <param name="tactics">The tactics of the
        /// SecurityMLAnalyticsSettings</param>
        /// <param name="techniques">The techniques of the
        /// SecurityMLAnalyticsSettings</param>
        /// <param name="customizableObservations">The customizable
        /// observations of the AnomalySecurityMLAnalyticsSettings.</param>
        /// <param name="anomalySettingsVersion">The anomaly settings version
        /// of the Anomaly security ml analytics settings that dictates whether
        /// job version gets updated or not.</param>
        /// <param name="settingsDefinitionId">The anomaly settings definition
        /// Id</param>
        public AnomalySecurityMLAnalyticsSettings(string displayName, bool enabled, string anomalyVersion, System.TimeSpan frequency, string settingsStatus, bool isDefaultSettings, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string etag = default(string), string description = default(string), System.DateTime? lastModifiedUtc = default(System.DateTime?), IList<SecurityMLAnalyticsSettingsDataSource> requiredDataConnectors = default(IList<SecurityMLAnalyticsSettingsDataSource>), IList<string> tactics = default(IList<string>), IList<string> techniques = default(IList<string>), object customizableObservations = default(object), int? anomalySettingsVersion = default(int?), System.Guid? settingsDefinitionId = default(System.Guid?))
            : base(id, name, type, systemData, etag)
        {
            Description = description;
            DisplayName = displayName;
            Enabled = enabled;
            LastModifiedUtc = lastModifiedUtc;
            RequiredDataConnectors = requiredDataConnectors;
            Tactics = tactics;
            Techniques = techniques;
            AnomalyVersion = anomalyVersion;
            CustomizableObservations = customizableObservations;
            Frequency = frequency;
            SettingsStatus = settingsStatus;
            IsDefaultSettings = isDefaultSettings;
            AnomalySettingsVersion = anomalySettingsVersion;
            SettingsDefinitionId = settingsDefinitionId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the description of the SecurityMLAnalyticsSettings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the display name for settings created by this
        /// SecurityMLAnalyticsSettings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets determines whether this settings is enabled or
        /// disabled.
        /// </summary>
        [JsonProperty(PropertyName = "properties.enabled")]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets the last time that this SecurityMLAnalyticsSettings has been
        /// modified.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedUtc")]
        public System.DateTime? LastModifiedUtc { get; private set; }

        /// <summary>
        /// Gets or sets the required data sources for this
        /// SecurityMLAnalyticsSettings
        /// </summary>
        [JsonProperty(PropertyName = "properties.requiredDataConnectors")]
        public IList<SecurityMLAnalyticsSettingsDataSource> RequiredDataConnectors { get; set; }

        /// <summary>
        /// Gets or sets the tactics of the SecurityMLAnalyticsSettings
        /// </summary>
        [JsonProperty(PropertyName = "properties.tactics")]
        public IList<string> Tactics { get; set; }

        /// <summary>
        /// Gets or sets the techniques of the SecurityMLAnalyticsSettings
        /// </summary>
        [JsonProperty(PropertyName = "properties.techniques")]
        public IList<string> Techniques { get; set; }

        /// <summary>
        /// Gets or sets the anomaly version of the
        /// AnomalySecurityMLAnalyticsSettings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.anomalyVersion")]
        public string AnomalyVersion { get; set; }

        /// <summary>
        /// Gets or sets the customizable observations of the
        /// AnomalySecurityMLAnalyticsSettings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.customizableObservations")]
        public object CustomizableObservations { get; set; }

        /// <summary>
        /// Gets or sets the frequency that this SecurityMLAnalyticsSettings
        /// will be run.
        /// </summary>
        [JsonProperty(PropertyName = "properties.frequency")]
        public System.TimeSpan Frequency { get; set; }

        /// <summary>
        /// Gets or sets the anomaly SecurityMLAnalyticsSettings status.
        /// Possible values include: 'Production', 'Flighting'
        /// </summary>
        [JsonProperty(PropertyName = "properties.settingsStatus")]
        public string SettingsStatus { get; set; }

        /// <summary>
        /// Gets or sets determines whether this anomaly security ml analytics
        /// settings is a default settings
        /// </summary>
        [JsonProperty(PropertyName = "properties.isDefaultSettings")]
        public bool IsDefaultSettings { get; set; }

        /// <summary>
        /// Gets or sets the anomaly settings version of the Anomaly security
        /// ml analytics settings that dictates whether job version gets
        /// updated or not.
        /// </summary>
        [JsonProperty(PropertyName = "properties.anomalySettingsVersion")]
        public int? AnomalySettingsVersion { get; set; }

        /// <summary>
        /// Gets or sets the anomaly settings definition Id
        /// </summary>
        [JsonProperty(PropertyName = "properties.settingsDefinitionId")]
        public System.Guid? SettingsDefinitionId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (AnomalyVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AnomalyVersion");
            }
            if (SettingsStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SettingsStatus");
            }
        }
    }
}
