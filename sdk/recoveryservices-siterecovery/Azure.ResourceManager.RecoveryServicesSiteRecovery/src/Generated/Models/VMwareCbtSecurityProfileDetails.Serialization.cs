// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class VMwareCbtSecurityProfileDetails
    {
        internal static VMwareCbtSecurityProfileDetails DeserializeVMwareCbtSecurityProfileDetails(JsonElement element)
        {
            Optional<string> targetVmSecurityType = default;
            Optional<string> isTargetVmSecureBootEnabled = default;
            Optional<string> isTargetVmTpmEnabled = default;
            Optional<string> isTargetVmIntegrityMonitoringEnabled = default;
            Optional<string> isTargetVmConfidentialEncryptionEnabled = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("targetVmSecurityType"))
                {
                    targetVmSecurityType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isTargetVmSecureBootEnabled"))
                {
                    isTargetVmSecureBootEnabled = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isTargetVmTpmEnabled"))
                {
                    isTargetVmTpmEnabled = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isTargetVmIntegrityMonitoringEnabled"))
                {
                    isTargetVmIntegrityMonitoringEnabled = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isTargetVmConfidentialEncryptionEnabled"))
                {
                    isTargetVmConfidentialEncryptionEnabled = property.Value.GetString();
                    continue;
                }
            }
            return new VMwareCbtSecurityProfileDetails(targetVmSecurityType.Value, isTargetVmSecureBootEnabled.Value, isTargetVmTpmEnabled.Value, isTargetVmIntegrityMonitoringEnabled.Value, isTargetVmConfidentialEncryptionEnabled.Value);
        }
    }
}
