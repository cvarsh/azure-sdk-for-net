// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.ApiManagement.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ApiManagement
{
    public partial class PortalConfigContractData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(EnableBasicAuth))
            {
                writer.WritePropertyName("enableBasicAuth");
                writer.WriteBooleanValue(EnableBasicAuth.Value);
            }
            if (Optional.IsDefined(Signin))
            {
                writer.WritePropertyName("signin");
                writer.WriteObjectValue(Signin);
            }
            if (Optional.IsDefined(Signup))
            {
                writer.WritePropertyName("signup");
                writer.WriteObjectValue(Signup);
            }
            if (Optional.IsDefined(Delegation))
            {
                writer.WritePropertyName("delegation");
                writer.WriteObjectValue(Delegation);
            }
            if (Optional.IsDefined(Cors))
            {
                writer.WritePropertyName("cors");
                writer.WriteObjectValue(Cors);
            }
            if (Optional.IsDefined(Csp))
            {
                writer.WritePropertyName("csp");
                writer.WriteObjectValue(Csp);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static PortalConfigContractData DeserializePortalConfigContractData(JsonElement element)
        {
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            Optional<bool> enableBasicAuth = default;
            Optional<PortalConfigPropertiesSignin> signin = default;
            Optional<PortalConfigPropertiesSignup> signup = default;
            Optional<PortalConfigDelegationProperties> delegation = default;
            Optional<PortalConfigCorsProperties> cors = default;
            Optional<PortalConfigCspProperties> csp = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("enableBasicAuth"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            enableBasicAuth = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("signin"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            signin = PortalConfigPropertiesSignin.DeserializePortalConfigPropertiesSignin(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("signup"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            signup = PortalConfigPropertiesSignup.DeserializePortalConfigPropertiesSignup(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("delegation"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            delegation = PortalConfigDelegationProperties.DeserializePortalConfigDelegationProperties(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("cors"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            cors = PortalConfigCorsProperties.DeserializePortalConfigCorsProperties(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("csp"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            csp = PortalConfigCspProperties.DeserializePortalConfigCspProperties(property0.Value);
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new PortalConfigContractData(id, name, type, systemData.Value, Optional.ToNullable(enableBasicAuth), signin.Value, signup.Value, delegation.Value, cors.Value, csp.Value);
        }
    }
}
